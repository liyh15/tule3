<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	<!--这个是默认加载的包 -->
	<!-- <context:component-scan base-package="controller"/> -->
	<context:component-scan base-package="spring.controller" />
	<context:component-scan base-package="spring.service.impl" />
	<context:component-scan base-package="spring.compoment" />
	<util:properties id="user" location="classpath:base.properties"/>
	<!-- 视图解析器：根据视图名称得到视图资源 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置前缀 -->
		<property name="prefix" value="/WEB-INF/" />
		<!-- 配置后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 注册数据库的配置 信息 -->
	<util:properties id="dbConfig" location="classpath:db.properties" />
	<!-- 注册数据库连接池的信息 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="#{dbConfig.url}" />
		<property name="driverClassName" value="#{dbConfig.driver}" />
		<property name="username" value="#{dbConfig.username}" />
		<property name="password" value="#{dbConfig.password}" />
		<property name="initialSize" value="#{dbConfig.initialSize}" />
		<property name="maxActive" value="#{dbConfig.maxActive}" />
	</bean>
	<!-- 配置MapperScannerConfigurer -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- setBasePackage 配置接口文件所在的包 -->
		<property name="basePackage" value="spring.mapper" />
	</bean>
	<!--配置SqlSessionFactoryBean -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置使用哪个数据源 ref引用另外一个bean ref属性的值是前序配置的数据源的id -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置XML映射文件的位置 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml" />
	</bean>
	<!-- 注解驱动 -->
	<mvc:annotation-driven />
	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" />  

	<!-- 此配置的id是必须填的 而且id的值必须是multipartResolver，我猜想应该是spring内部就是用这个名字来进行调用的 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<property name="maxUploadSize" value="3145728" />
		<property name="maxUploadSizePerFile"  value="3145728"/>
		<property name="defaultEncoding" value="utf-8"/>
    </bean>
    
    <!-- 配置拦截器链 -->
	<mvc:interceptors>
		<!-- 配置用户方面的拦截器 -->
		<mvc:interceptor>
			<!-- 1. 拦截的路径 -->
			<mvc:mapping path="/user/**" />  <!-- //这个路径代表user底下所有的路径及子路径 -->
			<!-- 2. 例外的路径，不拦截的路径，即白名单,意思就是，本来是要拦截所有的路径的，但是 底下列出的这些是不需要拦截的 -->
			<mvc:exclude-mapping path="/user/login.do" />
			<mvc:exclude-mapping path="/user/mainView.do" />
			<mvc:exclude-mapping path="/user/trainView.do" />
			<mvc:exclude-mapping path="/user/codePic.do" />
			<mvc:exclude-mapping path="/user/checkPassenger.do" />
			<!-- 3. 指定拦截器类 -->
			<bean class="spring.interceptor.UserInterceptor" />
		</mvc:interceptor>
		
		<!-- 配置订单方面的拦截器 -->
		<mvc:interceptor>
			<!-- 1. 拦截的路径 -->
			<mvc:mapping path="/order/**" />  <!-- //这个路径代表user底下所有的路径及子路径 -->
			<!-- 3. 指定拦截器类 -->
			<bean class="spring.interceptor.OrderInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 注解驱动，注解@Transactional这个注解 -->
    <!--transaction-manager是下面注解的id  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 配置事务管理器,事务要成功的话必须没有抛出任何异常时才成功（异常指定为RuntimeException异常） -->
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           <property name="dataSource" ref="dataSource"></property>    
    </bean>
</beans>












