<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!-- namespace：与当前xml文件对应的java接口 -->
<mapper namespace="spring.mapper.OrderMapper">
	<!-- 根据订单编号查询指定订单 -->
	<select id="getOrderByOrderId" resultType="entity.MapperOrder">
		SELECT
			id,
			user_id userId,
			status,
			traffic_date_arrange_id trafficDateArrangeId,
			totle_price totlePrice,
			passenger_id passengerId,
			type,
			oexplain,
			reservation,
			return_price returnPrice,
			distribution_address distributionAddress,
			contact_phone contactPhone,
			create_time createTime,
			time_close timeClose,
			comment,
			comment_status commentStatus
		FROM
		    tule_order
		WHERE
		    id = #{id}
		AND
		    state = 1
	</select>

	<!-- 主动取消订单 -->
	<update id="cancelOrderById">
		UPDATE
		 tule_order
		SET
		 status = 2
		WHERE
		 <if test="id != null" >
             id = #{id}
         </if>		
		AND
		 status = 4
		AND
		 state = 1
	</update>

	<!-- 获取所有已超时的未付款订单 -->
	<select id="cancelOrder" resultType="java.lang.Integer">
		SELECT
		  id
		FROM
		  tule_order
        WHERE
		  unix_timestamp(sysdate()) > unix_timestamp(time_close)
		AND
		  status = 4
		AND
		  state = 1
	</select>
    
    <!-- 删除订单 -->
	<update id="deleteOrderById">
        UPDATE
		  tule_order
		SET
		  state = 0
		WHERE
		 <if test="id != null" >
             id = #{id}
         </if>	
		AND
		  status != 4
		AND
		  state = 1
	</update>
	
	<update id = "payForOrder" >
	   UPDATE
	     tule_order
	   SET
	     <if test="status != null">
	       STATUS = #{status,jdbcType = VARCHAR}
	     </if>	     
	   WHERE
	     <if test="id != null" >
             id = #{id}
         </if>		     
	</update>
	<!-- 通过乘客编号获取所有关联的订单，用于购票乘客信息筛选 -->
	<select id = "getOrderByPassenger" resultType="entity.MapperOrder">
	    SELECT
			id,
			user_id userId,
			status,
			traffic_date_arrange_id trafficDateArrangeId,
			totle_price totlePrice,
			passenger_id passengerId,
			type,
			oexplain,
			reservation,
			return_price returnPrice,
			distribution_address distributionAddress,
			contact_phone contactPhone,
			create_time createTime,
			time_close timeClose,
			comment,
			comment_status commentStatus
		FROM
		    tule_order
		<where>
		     <foreach collection="passengers" item="item" separator="or">
		         passenger_id like concat('%&amp;',#{item.id,jdbcType = VARCHAR},'&amp;%')
		     </foreach>
		     AND 
		       state = 1
		     AND
		       status NOT IN ('0','2','3')
		</where>		   
	</select>
	<!-- 退票中修改订单状态 -->
	<update id="returnTicket">
	   UPDATE
	     tule_order
	   SET
		  status = 3
	   WHERE
		 <if test="id != null" >
             id = #{id}
         </if>	
	   AND
		  status = 1
	   AND
		  state = 1
	</update>
	<!-- 改前后修改订单 -->
	<update id = "updateChangeTicketOrder">
	   UPDATE
	     tule_order
	   SET
	     traffic_date_arrange_id = #{trafficDateId,jdbcType = INTEGER},
	     totle_price = #{totlePrice,jdbcType = VARCHAR},
	     oexplain = #{explain,jdbcType = VARCHAR}
	   WHERE
	     id = #{id,jdbcType = INTEGER}
	   AND
	     status = 1
	   AND
	     state = 1
	</update>
</mapper>